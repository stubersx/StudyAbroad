// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyAbroad.Models;

#nullable disable

namespace StudyAbroad.Migrations
{
    [DbContext(typeof(AbroadContext))]
    [Migration("20241028080512_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudyAbroad.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<int>("ContactHours")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prerequisites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tuition")
                        .HasColumnType("float");

                    b.HasKey("CourseID");

                    b.HasIndex("InstitutionID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            ContactHours = 20,
                            Description = "Improve your listening, reading, writing, and speaking skills.",
                            Duration = 24,
                            InstitutionID = 1,
                            Name = "ESL: English as a Second Language",
                            Prerequisites = "TOEIC 400 or higher",
                            Tuition = 7500.0
                        },
                        new
                        {
                            CourseID = 2,
                            ContactHours = 20,
                            Description = "Learn about American culture and gain valuable experience with locals.",
                            Duration = 8,
                            InstitutionID = 1,
                            Name = "Summer Program",
                            Tuition = 5000.0
                        },
                        new
                        {
                            CourseID = 3,
                            ContactHours = 40,
                            Description = "Choose a local major and learn with local students.",
                            Duration = 48,
                            InstitutionID = 10,
                            Name = "Exchange Program",
                            Prerequisites = "JLPT 2 or higher",
                            Tuition = 15000.0
                        },
                        new
                        {
                            CourseID = 4,
                            ContactHours = 20,
                            Description = "Choose a major and learn with local students.",
                            Duration = 24,
                            InstitutionID = 4,
                            Name = "Exchange Program",
                            Prerequisites = "TOEFL 100 or higher",
                            Tuition = 8000.0
                        },
                        new
                        {
                            CourseID = 5,
                            ContactHours = 12,
                            Description = "Learn German by taking listening, reading, writing, and speaking classes.",
                            Duration = 12,
                            InstitutionID = 6,
                            Name = "Language Program",
                            Prerequisites = "TOEIC 400 or higher",
                            Tuition = 5500.0
                        },
                        new
                        {
                            CourseID = 6,
                            ContactHours = 20,
                            Description = "Learn about Japanese culture and gain valuable experience with locals.",
                            Duration = 4,
                            InstitutionID = 7,
                            Name = "Summer Program",
                            Tuition = 2500.0
                        });
                });

            modelBuilder.Entity("StudyAbroad.Models.Institution", b =>
                {
                    b.Property<int>("InstitutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstitutionID"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<bool>("DormAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Education")
                        .HasColumnType("int");

                    b.Property<bool>("MealPlanAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstitutionID");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            InstitutionID = 1,
                            Country = "United States",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 3,
                            MealPlanAvailable = true,
                            Name = "Northwestern Michigan College",
                            Region = "Michigan",
                            Type = 0,
                            URL = "https://www.nmc.edu/"
                        },
                        new
                        {
                            InstitutionID = 2,
                            Country = "Canada",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 3,
                            MealPlanAvailable = true,
                            Name = "Georgian College",
                            Region = "Ontario",
                            Type = 0,
                            URL = "https://www.georgiancollege.ca/"
                        },
                        new
                        {
                            InstitutionID = 3,
                            Country = "Philippines",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 3,
                            MealPlanAvailable = false,
                            Name = "Enderun Colleges",
                            Region = "National Capital Region",
                            Type = 1,
                            URL = "https://www.enderuncolleges.com/"
                        },
                        new
                        {
                            InstitutionID = 4,
                            Country = "United Kingdom",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 4,
                            MealPlanAvailable = false,
                            Name = "Regents University London",
                            Region = "Greater London",
                            Type = 1,
                            URL = "https://www.regents.ac.uk/"
                        },
                        new
                        {
                            InstitutionID = 5,
                            Country = "Ireland",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 4,
                            MealPlanAvailable = true,
                            Name = "University of Limerick",
                            Region = "Munster",
                            Type = 0,
                            URL = "https://www.ul.ie/"
                        },
                        new
                        {
                            InstitutionID = 6,
                            Country = "Germany",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 4,
                            MealPlanAvailable = false,
                            Name = "Private University of Applied Sciences, Goettingen",
                            Region = "Niedersachsen",
                            Type = 1,
                            URL = "https://www.pfh.de/en"
                        },
                        new
                        {
                            InstitutionID = 7,
                            Country = "Japan",
                            CourseID = 0,
                            DormAvailable = false,
                            Education = 1,
                            MealPlanAvailable = true,
                            Name = "Musashino Higashi Middle School",
                            Region = "Tokyo",
                            Type = 1,
                            URL = "https://www.musashino-higashi.org/chugaku/"
                        },
                        new
                        {
                            InstitutionID = 8,
                            Country = "Japan",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 2,
                            MealPlanAvailable = false,
                            Name = "International College of Technology, Kanazawa",
                            Region = "Ishikawa",
                            Type = 1,
                            URL = "https://www.ict-kanazawa.ac.jp/"
                        },
                        new
                        {
                            InstitutionID = 9,
                            Country = "Japan",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 2,
                            MealPlanAvailable = false,
                            Name = "Toin Gakuen",
                            Region = "Kanagawa",
                            Type = 1,
                            URL = "https://toin.ac.jp/ses/"
                        },
                        new
                        {
                            InstitutionID = 10,
                            Country = "Japan",
                            CourseID = 0,
                            DormAvailable = true,
                            Education = 4,
                            MealPlanAvailable = false,
                            Name = "University of Tokyo",
                            Region = "Tokyo",
                            Type = 0,
                            URL = "https://www.u-tokyo.ac.jp/ja/index.html"
                        });
                });

            modelBuilder.Entity("StudyAbroad.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberID");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberID = 1,
                            Age = 17,
                            Country = "United States",
                            FirstName = "Clarice",
                            Gender = 1,
                            Grade = 12,
                            LastName = "Langston",
                            Region = "Michigan",
                            RegistrationDate = new DateTime(2024, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MemberID = 2,
                            Age = 20,
                            Country = "United States",
                            FirstName = "Alden",
                            Gender = 0,
                            LastName = "Ellisson",
                            Region = "Florida",
                            RegistrationDate = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MemberID = 3,
                            Age = 22,
                            Country = "France",
                            FirstName = "Lucas",
                            Gender = 0,
                            LastName = "Barre",
                            Region = "Paris",
                            RegistrationDate = new DateTime(2024, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MemberID = 4,
                            Age = 14,
                            Country = "Spain",
                            FirstName = "Roberta",
                            Gender = 1,
                            Grade = 9,
                            LastName = "Garza",
                            Region = "Madrid",
                            RegistrationDate = new DateTime(2024, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MemberID = 5,
                            Age = 19,
                            Country = "United Kingdom",
                            FirstName = "Danny",
                            Gender = 0,
                            LastName = "Salmon",
                            Region = "London",
                            RegistrationDate = new DateTime(2024, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudyAbroad.Models.MyBoard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double?>("AdditionalCost")
                        .HasColumnType("float");

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<double?>("HousingCost")
                        .HasColumnType("float");

                    b.Property<string>("HousingType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HousingWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitutionID")
                        .HasColumnType("int");

                    b.Property<double?>("MealCost")
                        .HasColumnType("float");

                    b.Property<string>("MealPlan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MoveInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Region")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Semester")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("InstitutionID");

                    b.HasIndex("MemberID");

                    b.ToTable("MyBoards");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AddressLine1 = "2-6 Midori-cho",
                            City = "Koganei",
                            Contact = "090-5566-1234",
                            Country = "Japan",
                            CourseID = 6,
                            HousingCost = 1200.0,
                            HousingType = "Homestay",
                            HousingWebsite = "https://homestay/housing1",
                            InstitutionID = 7,
                            MemberID = 4,
                            MoveInDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyOwner = "Riku Aoki",
                            Region = "Tokyo",
                            Semester = 2,
                            Year = 2025,
                            ZipCode = "184-0003"
                        },
                        new
                        {
                            ID = 2,
                            AddressLine1 = "7-3 Hongou",
                            City = "Bunkyo-ku",
                            Contact = "080-2233-5678",
                            Country = "Japan",
                            CourseID = 3,
                            HousingCost = 800.0,
                            HousingType = "Dormitory",
                            HousingWebsite = "https://dorm/housing2",
                            InstitutionID = 10,
                            MealCost = 800.0,
                            MemberID = 2,
                            MoveInDate = new DateTime(2025, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyOwner = "Kazumi Saitou",
                            Region = "Tokyo",
                            Semester = 1,
                            Year = 2025,
                            ZipCode = "113-8654"
                        },
                        new
                        {
                            ID = 3,
                            CourseID = 5,
                            InstitutionID = 6,
                            MemberID = 5,
                            Semester = 1,
                            Year = 2025
                        },
                        new
                        {
                            ID = 4,
                            AdditionalCost = 500.0,
                            AddressLine1 = "1701 E Front St.",
                            AddressLine2 = "Apt. 204",
                            City = "Traverse City",
                            Contact = "231-226-1234",
                            Country = "United States",
                            CourseID = 1,
                            HousingCost = 700.0,
                            HousingType = "Appartment",
                            HousingWebsite = "https://appartment/housing3",
                            InstitutionID = 1,
                            MealCost = 1550.0,
                            MealPlan = "PLAN B",
                            MemberID = 3,
                            MoveInDate = new DateTime(2025, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyOwner = "Jon Green",
                            Region = "Michigan",
                            Semester = 0,
                            Year = 2025,
                            ZipCode = "49686"
                        },
                        new
                        {
                            ID = 5,
                            MemberID = 1,
                            Semester = 0,
                            Year = 2026
                        });
                });

            modelBuilder.Entity("StudyAbroad.Models.Course", b =>
                {
                    b.HasOne("StudyAbroad.Models.Institution", "Institution")
                        .WithMany("Courses")
                        .HasForeignKey("InstitutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StudyAbroad.Models.MyBoard", b =>
                {
                    b.HasOne("StudyAbroad.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID");

                    b.HasOne("StudyAbroad.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionID");

                    b.HasOne("StudyAbroad.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Institution");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("StudyAbroad.Models.Institution", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
